{"version":3,"sources":["components/Task.js","components/NewTaskButton.js","components/NewTaskForm.js","App.js","index.js"],"names":["Task","props","_props$task","Object","slicedToArray","task","id","title","desc","completed","scheduledDt","priority","cleanedScheduledDt","value","substring","priorityColour","react_default","a","createElement","className","type","name","onChange","handleTaskUpdate","onBlur","putTaskUpdate","checked","placeholder","NewTaskButton","onClick","postNewTask","NewTaskForm","newTaskTitle","handleNewTaskChange","components_NewTaskButton","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getAllTasks","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","then","data","setState","isFetched","tasks","error","stop","_callee2","_context2","state","abrupt","concat","method","bind","assertThisInitialized","e","updateValue","taskID","Number","target","parentNode","fieldToUpdate","updatedTaskState","map","field","metadata","colName","fieldCopy","JSON","parse","stringify","_this2","_this$state","console","log","message","components_Task","key","components_NewTaskForm","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f06ba64c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Task.css\";\r\n\r\nfunction Task(props) {\r\n  const [id, , title, desc, completed, scheduledDt, priority] = props.task;\r\n  const cleanedScheduledDt = scheduledDt.value\r\n    ? scheduledDt.value.substring(0, 10)\r\n    : \"\";\r\n  const priorityColour =\r\n    priority.value === \"High\" ? \"task__priority--high\" : \"task__priority\";\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <form id={id.value}>\r\n        <input\r\n          className=\"task__title\"\r\n          type=\"text\"\r\n          name=\"task_title\"\r\n          value={title.value}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <input\r\n          className=\"task__completed\"\r\n          type=\"checkbox\"\r\n          name=\"task_completed\"\r\n          checked={completed.value}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <input\r\n          className=\"task__desc\"\r\n          type=\"text\"\r\n          name=\"task_desc\"\r\n          placeholder=\"...\"\r\n          value={desc.value}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <input\r\n          className=\"task__scheduledDt\"\r\n          type=\"date\"\r\n          name=\"task_scheduled_dt\"\r\n          value={cleanedScheduledDt}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <select\r\n          className={priorityColour}\r\n          name=\"priority_desc\"\r\n          value={priority.value}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        >\r\n          <option>High</option>\r\n          <option>Medium</option>\r\n          <option>Low</option>\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"../css/NewTaskButton.css\";\r\n\r\nconst NewTaskButton = props => {\r\n  return (\r\n    <button className=\"newTaskButton\" type=\"button\" onClick={props.postNewTask}>\r\n      Add Task\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NewTaskButton;\r\n","import React from \"react\";\r\nimport NewTaskButton from \"./NewTaskButton\";\r\nimport \"../css/NewTaskForm.css\";\r\n\r\nconst NewTaskForm = props => {\r\n  return (\r\n    <div className=\"newTaskForm\">\r\n      <form>\r\n        <input\r\n          className=\"newTaskForm__titleInput\"\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={props.newTaskTitle}\r\n          onChange={props.handleNewTaskChange}\r\n        />\r\n        <NewTaskButton postNewTask={props.postNewTask} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;\r\n","import React, { Component } from \"react\";\r\nimport Task from \"./components/Task\";\r\nimport NewTaskForm from \"./components/NewTaskForm\";\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isFetched: false,\r\n      tasks: [],\r\n      newTaskTitle: \"\"\r\n    };\r\n\r\n    this.getAllTasks = this.getAllTasks.bind(this);\r\n    this.putTaskUpdate = this.putTaskUpdate.bind(this);\r\n    this.handleTaskUpdate = this.handleTaskUpdate.bind(this);\r\n    this.handleNewTaskChange = this.handleNewTaskChange.bind(this);\r\n    this.postNewTask = this.postNewTask.bind(this);\r\n  }\r\n\r\n  getAllTasks = async () => {\r\n    const res = await fetch(\"/allTasks\");\r\n    await res.json().then(\r\n      data => {\r\n        this.setState({\r\n          isFetched: true,\r\n          tasks: data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          error,\r\n          isFetched: true\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  putTaskUpdate(e) {\r\n    const taskID = Number(e.target.parentNode.id);\r\n    const fieldToUpdate = e.target.name;\r\n    let updateValue;\r\n\r\n    if (fieldToUpdate === \"task_title\" && updateValue === \"\") return;\r\n\r\n    updateValue =\r\n      fieldToUpdate === \"task_completed\"\r\n        ? e.target.checked\r\n          ? 1\r\n          : 0\r\n        : e.target.value;\r\n\r\n    fetch(`/amendTask/${taskID}/field/${fieldToUpdate}/value/${updateValue}`, {\r\n      method: \"PUT\"\r\n    });\r\n  }\r\n\r\n  postNewTask = async () => {\r\n    const newTaskTitle = this.state.newTaskTitle;\r\n\r\n    if (newTaskTitle === \"\") return;\r\n\r\n    await fetch(`/addTask/${newTaskTitle}`, {\r\n      method: \"POST\"\r\n    })\r\n      .then(() => this.setState({ newTaskTitle: \"\" }))\r\n      .then(() => this.getAllTasks());\r\n  };\r\n\r\n  handleTaskUpdate(e) {\r\n    const taskID = Number(e.target.parentNode.id);\r\n    const fieldToUpdate = e.target.name;\r\n    let updateValue;\r\n\r\n    updateValue =\r\n      fieldToUpdate === \"task_completed\"\r\n        ? e.target.checked\r\n          ? 1\r\n          : 0\r\n        : e.target.value;\r\n\r\n    const updatedTaskState = this.state.tasks.map(task => {\r\n      const updateTaskfield = field => {\r\n        if (field.metadata.colName === fieldToUpdate) {\r\n          // made a deep copy of the field obj to prevent accidental state mutation\r\n          const fieldCopy = JSON.parse(JSON.stringify(field));\r\n          fieldCopy.value = updateValue;\r\n          return fieldCopy;\r\n        } else {\r\n          return field;\r\n        }\r\n      };\r\n\r\n      if (task[0].value === taskID) {\r\n        return task.map(updateTaskfield);\r\n      } else {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    this.setState({ tasks: updatedTaskState });\r\n  }\r\n\r\n  handleNewTaskChange(e) {\r\n    const newTaskTitle = e.target.value;\r\n\r\n    this.setState({ newTaskTitle });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTasks();\r\n  }\r\n\r\n  render() {\r\n    const { error, isFetched } = this.state;\r\n    if (error) {\r\n      console.log(error.message);\r\n      return (\r\n        <section>\r\n          <p>Sorry, something went wrong. Please try again.</p>\r\n        </section>\r\n      );\r\n    } else if (!isFetched) {\r\n      return (\r\n        <section>\r\n          <p>Your tasks are loading...</p>\r\n        </section>\r\n      );\r\n    } else {\r\n      const tasks = this.state.tasks.map(task => {\r\n        return (\r\n          <Task\r\n            key={task[0].value}\r\n            task={task}\r\n            handleTaskUpdate={this.handleTaskUpdate}\r\n            putTaskUpdate={this.putTaskUpdate}\r\n          />\r\n        );\r\n      });\r\n      return (\r\n        <section className=\"tasksContainer\">\r\n          {tasks}\r\n          <NewTaskForm\r\n            newTaskTitle={this.state.newTaskTitle}\r\n            handleNewTaskChange={this.handleNewTaskChange}\r\n            postNewTask={this.postNewTask}\r\n          />\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}