{"version":3,"sources":["components/DeleteTaskButton.js","components/Task.js","components/NewTaskButton.js","components/NewTaskForm.js","utilityFunctions.js","App.js","index.js"],"names":["DeleteTaskButton","props","react_default","a","createElement","className","type","onClick","deleteTask","taskID","index_es","icon","faTrashAlt","Task","_props$task","task","task_id","taskTitle","task_title","taskDesc","task_desc","taskCompleted","task_completed","taskScheduledDt","task_scheduled_dt","priorityDesc","priority_desc","cleanedScheduledDt","substring","priorityColour","id","autoComplete","name","value","onChange","handleTaskUpdate","onBlur","putTaskUpdate","checked","rows","cols","placeholder","components_DeleteTaskButton","NewTaskButton","postNewTask","NewTaskForm","newTaskTitle","handleNewTaskChange","components_NewTaskButton","encodeUpdateValue","updateValue","replace","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isFetched","tasks","getAllTasks","bind","assertThisInitialized","fetch","res","json","data","setState","_context","t0","e","Number","target","parentNode","fieldToUpdate","updatedTaskState","map","taskCopy","JSON","parse","stringify","updateTask","forEach","val","concat","method","window","confirm","_this2","_this$state","components_Task","key","components_NewTaskForm","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.62a29660.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/DeleteTaskButton.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DeleteTaskButton = (props) => {\r\n  return (\r\n    <button\r\n      className=\"deleteTaskButton\"\r\n      type=\"button\"\r\n      onClick={() => props.deleteTask(props.taskID)}\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteTaskButton;\r\n","import React from \"react\";\r\nimport DeleteTaskButton from \"./DeleteTaskButton\";\r\nimport \"../css/Task.css\";\r\n\r\nconst Task = (props) => {\r\n  const {\r\n    task_id: taskID,\r\n    task_title: taskTitle,\r\n    task_desc: taskDesc,\r\n    task_completed: taskCompleted,\r\n    task_scheduled_dt: taskScheduledDt,\r\n    priority_desc: priorityDesc,\r\n  } = props.task;\r\n  const cleanedScheduledDt = taskScheduledDt\r\n    ? taskScheduledDt.substring(0, 10)\r\n    : \"\";\r\n  const priorityColour =\r\n    priorityDesc === \"High\" ? \"task__priority--high\" : \"task__priority\";\r\n  return (\r\n    <div className=\"task\">\r\n      <form id={taskID} autoComplete=\"off\">\r\n        <input\r\n          className=\"task__title\"\r\n          type=\"text\"\r\n          name=\"task_title\"\r\n          value={taskTitle}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <input\r\n          className=\"task__completed\"\r\n          type=\"checkbox\"\r\n          name=\"task_completed\"\r\n          checked={taskCompleted}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <textarea\r\n          className=\"task__desc\"\r\n          type=\"text\"\r\n          name=\"task_desc\"\r\n          rows=\"3\"\r\n          cols=\"20\"\r\n          placeholder=\"...\"\r\n          value={taskDesc}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <input\r\n          className=\"task__scheduledDt\"\r\n          type=\"date\"\r\n          name=\"task_scheduled_dt\"\r\n          value={cleanedScheduledDt}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        />\r\n        <select\r\n          className={priorityColour}\r\n          name=\"priority_desc\"\r\n          value={priorityDesc}\r\n          onChange={props.handleTaskUpdate}\r\n          onBlur={props.putTaskUpdate}\r\n        >\r\n          <option>High</option>\r\n          <option>Medium</option>\r\n          <option>Low</option>\r\n        </select>\r\n        <DeleteTaskButton deleteTask={props.deleteTask} taskID={taskID} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"../css/NewTaskButton.css\";\r\n\r\nconst NewTaskButton = (props) => {\r\n  return (\r\n    <button className=\"newTaskButton\" type=\"button\" onClick={props.postNewTask}>\r\n      Add Task\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NewTaskButton;\r\n","import React from \"react\";\r\nimport NewTaskButton from \"./NewTaskButton\";\r\nimport \"../css/NewTaskForm.css\";\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (\r\n    <div className=\"newTaskForm\">\r\n      <form>\r\n        <input\r\n          className=\"newTaskForm__titleInput\"\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={props.newTaskTitle}\r\n          onChange={props.handleNewTaskChange}\r\n        />\r\n        <NewTaskButton postNewTask={props.postNewTask} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;\r\n","const encodeUpdateValue = (updateValue) => {\r\n  const encodedStr = updateValue\r\n    .replace(/%/g, \"%25\")\r\n    .replace(/[\\n]/g, \"%0A\")\r\n    .replace(/\\//g, \"%2f\")\r\n    .replace(/\\\\/g, \"%5C\")\r\n    .replace(/\\?/g, \"%3f\")\r\n    .replace(/'/g, \"''\")\r\n    .replace(/#/g, \"%23\");\r\n\r\n  return encodedStr;\r\n};\r\n\r\nexport default encodeUpdateValue;","import React, { Component } from \"react\";\r\nimport Task from \"./components/Task\";\r\nimport NewTaskForm from \"./components/NewTaskForm\";\r\nimport \"./css/App.css\";\r\nimport encodeUpdateValue from \"./utilityFunctions\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      error: null,\r\n      isFetched: false,\r\n      tasks: [],\r\n      newTaskTitle: \"\",\r\n    };\r\n\r\n    this.getAllTasks = this.getAllTasks.bind(this);\r\n    this.putTaskUpdate = this.putTaskUpdate.bind(this);\r\n    this.handleTaskUpdate = this.handleTaskUpdate.bind(this);\r\n    this.handleNewTaskChange = this.handleNewTaskChange.bind(this);\r\n    this.postNewTask = this.postNewTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n  }\r\n\r\n  async getAllTasks() {\r\n    const res = await fetch(\"/allTasks\");\r\n    try {\r\n      const data = await res.json();\r\n      this.setState({\r\n        isFetched: true,\r\n        tasks: data,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error,\r\n        isFetched: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTaskUpdate(e) {\r\n    const taskID = Number(e.target.parentNode.id);\r\n    const fieldToUpdate = e.target.name;\r\n    let updateValue;\r\n\r\n    updateValue =\r\n      fieldToUpdate === \"task_completed\" ? e.target.checked : e.target.value;\r\n\r\n    const updatedTaskState = this.state.tasks.map((task) => {\r\n      const updateTask = (task) => {\r\n        const taskCopy = JSON.parse(JSON.stringify(task));\r\n        taskCopy[fieldToUpdate] = updateValue;\r\n\r\n        return taskCopy;\r\n      };\r\n\r\n      if (task.task_id === taskID) {\r\n        return updateTask(task);\r\n      } else {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    this.setState({ tasks: updatedTaskState });\r\n  }\r\n\r\n  putTaskUpdate(e) {\r\n    const taskID = Number(e.target.parentNode.id);\r\n    const fieldToUpdate = e.target.name;\r\n    let updateValue;\r\n\r\n    this.state.tasks.forEach((val) => {\r\n      if (val.task_id === taskID) updateValue = val[fieldToUpdate];\r\n    });\r\n\r\n    if (fieldToUpdate === \"task_title\" && updateValue === \"\") return;\r\n\r\n    if (fieldToUpdate === \"task_title\" || fieldToUpdate === \"task_desc\") {\r\n      updateValue = encodeUpdateValue(updateValue);\r\n\r\n      if (updateValue === \"\") updateValue = \"NULL\";\r\n    }\r\n\r\n    fetch(`/amendTask/${taskID}/field/${fieldToUpdate}/value/${updateValue}`, {\r\n      method: \"PUT\",\r\n    });\r\n  }\r\n\r\n  async deleteTask(taskID) {\r\n    const response = window.confirm(\r\n      \"Are you sure that you want to delete this task?\"\r\n    );\r\n\r\n    if (response) {\r\n      await fetch(`/deleteTask/${taskID}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      this.getAllTasks();\r\n    }\r\n  }\r\n\r\n  handleNewTaskChange(e) {\r\n    const newTaskTitle = e.target.value;\r\n\r\n    this.setState({ newTaskTitle });\r\n  }\r\n\r\n  async postNewTask() {\r\n    const newTaskTitle = encodeUpdateValue(this.state.newTaskTitle);\r\n\r\n    if (newTaskTitle === \"\") return;\r\n\r\n    await fetch(`/addTask/${newTaskTitle}`, {\r\n      method: \"POST\",\r\n    });\r\n\r\n    this.setState({ newTaskTitle: \"\" });\r\n    this.getAllTasks();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTasks();\r\n  }\r\n\r\n  render() {\r\n    const { error, isFetched } = this.state;\r\n    if (error) {\r\n      return (\r\n        <section>\r\n          <p>Sorry, something went wrong. Please try again.</p>\r\n        </section>\r\n      );\r\n    } else if (!isFetched) {\r\n      return (\r\n        <section>\r\n          <p>Your tasks are loading...</p>\r\n        </section>\r\n      );\r\n    } else {\r\n      const tasks = this.state.tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            key={task.task_id}\r\n            task={task}\r\n            handleTaskUpdate={this.handleTaskUpdate}\r\n            putTaskUpdate={this.putTaskUpdate}\r\n            deleteTask={this.deleteTask}\r\n          />\r\n        );\r\n      });\r\n      return (\r\n        <section className=\"tasksContainer\">\r\n          <NewTaskForm\r\n            newTaskTitle={this.state.newTaskTitle}\r\n            handleNewTaskChange={this.handleNewTaskChange}\r\n            postNewTask={this.postNewTask}\r\n          />\r\n          {tasks}\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}